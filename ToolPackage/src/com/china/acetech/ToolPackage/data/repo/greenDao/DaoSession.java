package com.china.acetech.ToolPackage.data.repo.greenDao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;


// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig customCourseDaoConfig;
    private final DaoConfig customCourseRelativeDaoConfig;
    private final DaoConfig userImageDataDaoConfig;
    private final DaoConfig braceletInfoDaoConfig;

    private final CustomCourseDao customCourseDao;
    private final CustomCourseRelativeDao customCourseRelativeDao;
    private final UserImageDataDao userImageDataDao;
    private final BraceletInfoDao braceletInfoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        customCourseDaoConfig = daoConfigMap.get(CustomCourseDao.class).clone();
        customCourseDaoConfig.initIdentityScope(type);

        customCourseRelativeDaoConfig = daoConfigMap.get(CustomCourseRelativeDao.class).clone();
        customCourseRelativeDaoConfig.initIdentityScope(type);

        userImageDataDaoConfig = daoConfigMap.get(UserImageDataDao.class).clone();
        userImageDataDaoConfig.initIdentityScope(type);

        braceletInfoDaoConfig = daoConfigMap.get(BraceletInfoDao.class).clone();
        braceletInfoDaoConfig.initIdentityScope(type);

        customCourseDao = new CustomCourseDao(customCourseDaoConfig, this);
        customCourseRelativeDao = new CustomCourseRelativeDao(customCourseRelativeDaoConfig, this);
        userImageDataDao = new UserImageDataDao(userImageDataDaoConfig, this);
        braceletInfoDao = new BraceletInfoDao(braceletInfoDaoConfig, this);

        registerDao(CustomCourse.class, customCourseDao);
        registerDao(CustomCourseRelative.class, customCourseRelativeDao);
        registerDao(UserImageData.class, userImageDataDao);
        registerDao(BraceletInfo.class, braceletInfoDao);
    }
    
    public void clear() {
        customCourseDaoConfig.getIdentityScope().clear();
        customCourseRelativeDaoConfig.getIdentityScope().clear();
        userImageDataDaoConfig.getIdentityScope().clear();
        braceletInfoDaoConfig.getIdentityScope().clear();
    }

    public CustomCourseDao getCustomCourseDao() {
        return customCourseDao;
    }

    public CustomCourseRelativeDao getCustomCourseRelativeDao() {
        return customCourseRelativeDao;
    }

    public UserImageDataDao getUserImageDataDao() {
        return userImageDataDao;
    }

    public BraceletInfoDao getBraceletInfoDao() {
        return braceletInfoDao;
    }

}
